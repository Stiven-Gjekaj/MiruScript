name: Build & Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies (C compiler tools)
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential

    - name: Build Miru compiler (C)
      run: make clean && make

    - name: Run tests
      run: |
        cd tests
        bash run_all.sh

    - name: Install Emscripten
      uses: mymindstorm/setup-emsdk@v14
      with:
        version: latest
        actions-cache-folder: 'emsdk-cache'

    - name: Build WASM compiler
      run: |
        mkdir -p web/public
        cd build
        emmake make -f emscripten.mk

    - name: Install web dependencies
      working-directory: ./web
      run: npm ci

    - name: Type check
      working-directory: ./web
      run: npm run type-check

    - name: Build web frontend
      working-directory: ./web
      run: npm run build

    - name: Upload build artifacts
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: dist-${{ matrix.node-version }}
        path: web/dist/
        retention-days: 7

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'

    - name: Check C code style (optional)
      run: |
        # Optional: Add clang-format checks
        # sudo apt-get install -y clang-format
        # find src tests -name "*.c" -o -name "*.h" | xargs clang-format -i
        echo "C code style check (optional)"

    - name: Install web dependencies
      working-directory: ./web
      run: npm ci

    - name: Lint (if configured)
      working-directory: ./web
      continue-on-error: true
      run: npm run lint || true

  integration-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'

    - name: Install Emscripten
      uses: mymindstorm/setup-emsdk@v14
      with:
        version: latest
        actions-cache-folder: 'emsdk-cache'

    - name: Build WASM compiler
      run: |
        mkdir -p web/public
        cd build
        emmake make -f emscripten.mk

    - name: Install web dependencies
      working-directory: ./web
      run: npm ci

    - name: Build frontend
      working-directory: ./web
      run: npm run build

    - name: Verify build output
      run: |
        ls -la web/dist/
        ls -la web/public/

    - name: Check for required files
      run: |
        test -f web/public/compiler.wasm || (echo "compiler.wasm not found" && exit 1)
        test -f web/dist/index.html || (echo "index.html not found" && exit 1)

  security-scan:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Run npm audit
      run: npm audit --audit-level=moderate
      working-directory: ./web
      continue-on-error: true

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
      continue-on-error: true

    - name: Upload Trivy results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'
      if: always()
      continue-on-error: true
